///-------------------------------------------------------------------
//*
//*	@作成日		2017/08/29
//*
//*	@名前		SceneManager.cpp
//*
//* @役割		ゲームシーンの管理クラス
//*
//*	@著者		加藤 彰馬
//*
///-------------------------------------------------------------------

// ヘッダのインクルード
#include "pch.h"
#include "SceneManager.h"

// 名前空間
using namespace DirectX;
using namespace DirectX::SimpleMath;

////////////////////////
//* メンバ変数の定義 *//
////////////////////////

////----------------------------------------------------------------------
////! @関数名：SceneManager
////!
////! @役割：シ−ン管理のコンストラクタ
////!
////! @引数：なし(void)
////!
////! @戻り値：存在しない
////----------------------------------------------------------------------
SceneManager::SceneManager()
{
	// 現在シーンをNULLにしておく
	m_scene = nullptr;
}

////----------------------------------------------------------------------
////! @関数名：~SceneManager
////!
////! @役割：シ−ン管理のデストラクタ
////!
////! @引数：存在しない
////!
////! @戻り値：存在しない
////----------------------------------------------------------------------
SceneManager::~SceneManager()
{
}

////----------------------------------------------------------------------
////! @関数名：ChangeScenes
////!
////! @役割：シ−ンの切り替え
////!
////! @引数：なし(void)
////!
////! @戻り値：なし(void)
////----------------------------------------------------------------------
void SceneManager::ChangeScenes(SCENE scene)
{
	// もし現在シーンが空でないなら、消去する
	if (m_scene != nullptr)
	{
		m_scene = nullptr;
	}

	// 引数に対応したシーンを切り替える
	switch (scene)
	{
	// タイトルシーンを現在シーンに
	case SCENE::TITLE:
		m_scene = new GameTitle();
		break;

	// プレイシーンを現在シーンに
	case SCENE::PLAY:
		m_scene = new GamePlay();
		break;

	default:
		break;
	}
}

////----------------------------------------------------------------------
////! @関数名：Update
////!
////! @役割：現在のシ−ンの更新
////!
////! @引数：なし(void)
////!
////! @戻り値：なし(void)
////----------------------------------------------------------------------
void SceneManager::Update(Keyboard* keyboard, Keyboard::KeyboardStateTracker* keyboardTracker)
{
	m_scene->Update(keyboard, keyboardTracker);
}

////----------------------------------------------------------------------
////! @関数名：Render
////!
////! @役割：現在のシーンの描画
////!
////! @引数：なし(void)
////!
////! @戻り値：なし(void)
////----------------------------------------------------------------------
void SceneManager::Render(SpriteBatch* spriteBatch)
{
	m_scene->Render(spriteBatch);
}
